.include templates/main/java/org/scijava/ops/engine/util/Globals.list
arities = (1..maxArity).collect()

[InplacesToFunctions.java]

simplifiedClass = ```
{ arity, num ->
  simplifiedInplace(arity, num) + '.class'
}
```
inplaceClass = ```
{ arity, num ->
  inplaceType(arity, num) + '.class'
}
```
typeVarNums = ```
{ arity, io ->
  (1..arity).subList(0, io - 1) + 'O' + (1..arity).subList(io, arity)
}
```
genericsList = ```
{ arity, io ->
  typeVarNums(arity, io).stream().map{a -> "I$a"}.collect()
}
```
generics = ```
{ arity, io ->
  '<' + String.join(', ', genericsList(arity, io)) + '>'
}
```
functionGenerics = ```
{ arity, io ->
  '<' + String.join(', ', genericsList(arity, io)) + ', IO>'
}
```
allMutableGenericsList = ```
{ arity ->
  (1..arity).stream().map{a -> "IO$a"}.collect()
}
```
allMutableGenerics = ```
{ arity ->
  '<' + String.join(', ', allMutableGenericsList.call(arity)) + '>'
}
```
basicParamsList = ```
{ arity, io -> 
	typeVarNums(arity, io).stream().map{a -> a == 'O' ? "ioType" : "in${a}Type"}.collect()
}
```
basicParams = ```
{ arity, io ->
  String.join(', ', basicParamsList(arity, io))
}
```
matchName = ```
{ arity, num ->
  arity == 1 ? "match" :
  "match${num}"
}
```
matchParams = ```
{ arity, io ->
  String.join(', ', genericsList(arity, io).stream().map{a -> 
    a.charAt(1) == 'O'? 
	"final Nil<$a> ${a.toLowerCase()}Type"  :
	"final Nil<$a> in${a.substring(1)}Type"}.collect())
}
```
typeArgs = ```
{ arity, io ->
  String.join(', ', basicParamsList(arity, io).stream().map{a -> "${a}.getType()"}.collect())
}
```
allMutableMutateParams = ```
{ arity ->
  String.join(', ', allMutableGenericsList(arity).stream().map{a -> "@Mutable $a ${a.toLowerCase()}"}.collect())
}
```
allMutableMutateArgs = ```
{ arity ->
  String.join(', ', allMutableGenericsList(arity).stream().map{a -> "${a.toLowerCase()}"}.collect())
}
```
mutateArgs = ```
{ arity, io ->
  String.join(', ', genericsList(arity, io).stream().map{a -> a.substring(1) == 'O' ? "IO io" : "$a in${a.substring(1)}"}.collect())
  }
```
mutateParams = ```
{ arity, io ->
  String.join(', ', genericsList(arity, io).stream().map{a -> a.substring(1) == 'O' ? "io" : "in${a.substring(1)}"}.collect())
  }
```
mutateTempParams = ```
{ arity, io ->
  String.join(', ', genericsList(arity, io).stream().map{a -> a.substring(1) == 'O' ? "temp" : "in${a.substring(1)}"}.collect())
  }
```
