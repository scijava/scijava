.include templates/main/java/org/scijava/ops/engine/util/Globals.list
arities = (1..maxArity).collect()

[ComputerToIterables.java]

iterableGenerics = ```
{ arity ->
  '<' + String.join(', ', genericParamTypes(arity).stream().map{a -> 'Iterable<' + a + '>'}.collect()) + '>'
}
```
classGenerics = ```
{ arity ->
  '<I, ' + String.join(', ', genericParamTypes(arity)) + '>'
}
```
iteratorsHaveNext = ```
{ arity ->
  if (arity == 0) return 'itrout.hasNext()'
  if (arity == 1) return 'itrin.hasNext() && itrout.hasNext()'
  String.join(' && ', (1..arity).stream().map{a -> 'itrin' + a + '.hasNext()'}.collect()) + ' && itrout.hasNext()'
}
```
iteratorsNext = ```
{ arity ->
  if (arity == 0) return 'itrout.next()'
  if (arity == 1) return 'itrin.next(), itrout.next()'
  String.join(', ', (1..arity).stream().map{a -> 'itrin' + a + '.next()'}.collect()) + ', itrout.next()'
}
```
iteratorInputs = ```
{ arity ->
  String.join(', ', (1..arity).stream().map{a -> 'in' + a }.collect()) + "
}
```
iteratorCtor = ```
{ arity ->
  if(arity == 0)
    inputs = []
  else if( arity == 1 )
    inputs = ['Iterator<I> itrin = in.iterator();']
  else
    inputs = (1..arity).stream().map{a -> 'Iterator<I' + a + '> itrin' + a + ' = in' + a + '.iterator();'}.collect()
  output = ['Iterator<O> itrout = out.iterator();']
  return inputs.plus(output)
}
```