.include Globals.list
arities = (0..numComputers).collect()

[Computers.java]
generics = ```
{ arity ->
  '<' + String.join(', ', genericParamTypes(arity)) + '>'
}
```
nilArgs = ```
{ arity ->
  String.join(', ', nilNames(arity))
}
```
matchParams = ```
{ arity ->
  // contains "I1, I2, ..., IN, O"
  generics = genericParamTypes(arity)
  // contains "in1, in2, ..., inN, out"
  names = nilNames(arity)
  // constructing strings of the term "final Nil<I1> in1"
  nilArgs = (0..arity).stream().map{a -> "final Nil<${generics[a]}> ${names[a]}"}.collect()
  String.join(', ', nilArgs)
}
```
typeArgs = ```
{ arity ->
  String.join(', ', nilNames(arity).stream().map{a -> "${a}.getType()"}.collect())
}
```
computeParams = ```
{ arity ->
  typeParams = typeParamsList(arity)
  typeParams.set(arity, "@Mutable " + typeParams.get(arity))
  String.join(', ', typeParams)
}
```
acceptParams = ```
{ arity ->
  String.join(', ', typeParamsList(arity).stream().map{a -> "final " + a}.collect())
}
```
computeArgs = ```
{ arity ->
  String.join(', ', genericsNamesList(arity))
}
```
