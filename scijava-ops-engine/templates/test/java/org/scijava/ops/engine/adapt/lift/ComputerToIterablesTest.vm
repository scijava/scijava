
/*
* This is autogenerated source code -- DO NOT EDIT. Instead, edit the
* corresponding template in templates/ and rerun bin/generate.groovy.
*/

package org.scijava.ops.engine.adapt.lift;

import static org.junit.jupiter.api.Assertions.assertArrayEquals;

import java.util.Arrays;
import java.util.List;

import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;
import org.scijava.function.Computers;
import org.scijava.ops.engine.AbstractTestEnvironment;
import org.scijava.ops.engine.OpBuilderTestOps;

/**
 * Tests the adaptation of {@link Computers} running on a type into
 * {@link Computers} running on an {@link Iterable} of that type.
 * 
 * @author Gabriel Selzer
 */
public class ComputerToIterablesTest extends AbstractTestEnvironment {

	@BeforeAll
	public static void AddNeededOps() {
		ops.register(new ComputerToIterables());
		ops.register(new OpBuilderTestOps());
	}

#foreach($arity in [1..$maxArity])
	@Test
	public void testComputer${arity}ToIterables() {
		final List<double[]> in = Arrays.asList(new double[] { 1, 2, 3 });
		final List<double[]> out = Arrays.asList(new double[] { 0, 0, 0 });
		final List<double[]> expected = //
			Arrays.asList(new double[] $expectedList.call($arity));
		ops.op("test.addArrays") //
			.arity$arity() //
			.input($inputList.call($arity)) //
			.output(out).compute();
		assertArrayEquals(out.toArray(), expected.toArray());
	}

#end
}
