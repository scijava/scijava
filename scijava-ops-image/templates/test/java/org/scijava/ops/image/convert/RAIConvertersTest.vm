/*
* This is autogenerated source code -- DO NOT EDIT. Instead, edit the
* corresponding template in templates/ and rerun bin/generate.groovy.
*/

package org.scijava.ops.image.convert;

import net.imglib2.RandomAccessibleInterval;
import net.imglib2.img.array.ArrayImgs;
import net.imglib2.loops.LoopBuilder;
import net.imglib2.type.logic.BitType;
import net.imglib2.type.numeric.complex.ComplexDoubleType;
import net.imglib2.type.numeric.complex.ComplexFloatType;
import net.imglib2.type.numeric.integer.*;
import net.imglib2.type.numeric.real.DoubleType;
import net.imglib2.type.numeric.real.FloatType;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.scijava.ops.image.AbstractOpTest;

public class RAIConvertersTest extends AbstractOpTest {

#foreach ($toType in $types)
	/**
	 * @param out the output image
	 * @implNote op names='test.convert.image.${toType}', type='Computer'
	 */
	public static void compute$toType(RandomAccessibleInterval<$toType> out) {
		LoopBuilder.setImages(out).forEachPixel(o -> o.setReal(1.0));
	}

	@Test
	public void testConvert${toType}Image() {
		var out = ArrayImgs.doubles(1, 1);
		out.firstElement().set(0.0);
		ops.op("test.convert.image.${toType}").output(out).compute();
		double expected = 1.0;
		double actual = out.firstElement().get();
		Assertions.assertEquals(expected, actual);
	}

#end
}
